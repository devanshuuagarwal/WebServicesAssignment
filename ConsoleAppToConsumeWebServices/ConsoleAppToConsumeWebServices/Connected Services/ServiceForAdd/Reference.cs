//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleAppToConsumeWebServices.ServiceForAdd {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfInt", Namespace="http://tempuri.org/", ItemName="int")]
    [System.SerializableAttribute()]
    public class ArrayOfInt : System.Collections.Generic.List<int> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceForAdd.WebServiceforAddSoap")]
    public interface WebServiceforAddSoap {
        
        // CODEGEN: Generating message contract since element name numbers from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add", ReplyAction="*")]
        global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddResponse Add(global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add", ReplyAction="*")]
        System.Threading.Tasks.Task<global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddResponse> AddAsync(global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Add", Namespace="http://tempuri.org/", Order=0)]
        public global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequestBody Body;
        
        public AddRequest() {
        }
        
        public AddRequest(global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public global::ConsoleAppToConsumeWebServices.ServiceForAdd.ArrayOfInt numbers;
        
        public AddRequestBody() {
        }
        
        public AddRequestBody(global::ConsoleAppToConsumeWebServices.ServiceForAdd.ArrayOfInt numbers) {
            this.numbers = numbers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddResponse", Namespace="http://tempuri.org/", Order=0)]
        public global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddResponseBody Body;
        
        public AddResponse() {
        }
        
        public AddResponse(global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int AddResult;
        
        public AddResponseBody() {
        }
        
        public AddResponseBody(int AddResult) {
            this.AddResult = AddResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceforAddSoapChannel : global::ConsoleAppToConsumeWebServices.ServiceForAdd.WebServiceforAddSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceforAddSoapClient : System.ServiceModel.ClientBase<global::ConsoleAppToConsumeWebServices.ServiceForAdd.WebServiceforAddSoap>, global::ConsoleAppToConsumeWebServices.ServiceForAdd.WebServiceforAddSoap {
        
        public WebServiceforAddSoapClient() {
        }
        
        public WebServiceforAddSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceforAddSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceforAddSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceforAddSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddResponse global::ConsoleAppToConsumeWebServices.ServiceForAdd.WebServiceforAddSoap.Add(global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequest request) {
            return base.Channel.Add(request);
        }
        
        public int Add(global::ConsoleAppToConsumeWebServices.ServiceForAdd.ArrayOfInt numbers) {
            global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequest inValue = new global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequest();
            inValue.Body = new global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequestBody();
            inValue.Body.numbers = numbers;
            global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddResponse retVal = ((global::ConsoleAppToConsumeWebServices.ServiceForAdd.WebServiceforAddSoap)(this)).Add(inValue);
            return retVal.Body.AddResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddResponse> global::ConsoleAppToConsumeWebServices.ServiceForAdd.WebServiceforAddSoap.AddAsync(global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequest request) {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddResponse> AddAsync(global::ConsoleAppToConsumeWebServices.ServiceForAdd.ArrayOfInt numbers) {
            global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequest inValue = new global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequest();
            inValue.Body = new global::ConsoleAppToConsumeWebServices.ServiceForAdd.AddRequestBody();
            inValue.Body.numbers = numbers;
            return ((global::ConsoleAppToConsumeWebServices.ServiceForAdd.WebServiceforAddSoap)(this)).AddAsync(inValue);
        }
    }
}
